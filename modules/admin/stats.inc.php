<?phprequire_once(ROOT_PATH.'/includes/Mobile_Detect.php');// error_reporting(E_ALL);// ini_set("display_errors", 1);// global $tpl;class TC_Stats{		public function __construct($root){		$this->root = $root;		$this->Db = $root->db;		$this->tpl = $root->tpl;		$this->config = new StdClass();		$this->config->count_back_years = 5;		$this->Mobile_Detect = new Mobile_Detect;		$this->typ_urzadzenia = ($this->Mobile_Detect->isMobile() ? ($this->Mobile_Detect->isTablet() ? 'tablet' : 'phone') : 'computer');			}		public function Select($sql){		$sql = str_replace('<@>',DB_PREFIX,$sql);		$sds= $this->Db->query($sql);		$outp=new stdClass;		$x=0;		while($row =$sds->fetch_assoc()){			$outp->{$x} = (object)$row;			$x++;		}		return $outp;	}	// public function ShowPanel(){		// echo '<pre>';		// print_r($this->Select("SELECT * FROM tc_stats LIMIT 10"));		// echo '</pre>';					// }	public function Update($table,$data=array(),$where=''){		try{		$table=$this->prefix . $table;		foreach($data as $key=>$val){				$SQL_AND[]="{$key}=:{$key}";		}		$this->InsertRow = $this->Db->prepare('UPDATE `'.$table.'` SET '.implode(',',$SQL_AND).' WHERE '.$where);		foreach($data as $key=>$val){			$this->InsertRow->bindValue(':'.$key, $val, PDO::PARAM_STR);		}					$this->InsertRow->execute();		}catch(PDOException $e){			echo $e->getMessage();					}		return $this;	}	public function Insert($table,$data=array()){		$table=$this->prefix . $table;		$this->InsertRow = $this->Db->prepare('INSERT INTO `'.$table.'` ('.implode(', ',array_keys($data)).') VALUES(:'.implode(', :',array_keys($data)).');');		foreach($data as $key=>$val){			$this->InsertRow->bindValue(':'.$key, $val, PDO::PARAM_STR);		}		$this->InsertRow->execute();		return $this;	}	public static function GetSecOnDay(){		$date = new DateTime(date('Y-m-d'));		$xxxx = (string)date('Y-m-d');		$obj = new StdClass();		$obj->elapsed_time = ((int)date("G")*3600)+((int)date("i")*60)+(int)date("s");		$obj->time_left = 86400 - $obj->elapsed_time;		$obj->start_time = (int)date('U',$xxxx);		$obj->end_time = 86400 + $obj->start_time;		return $obj;	}	public function Error($txt){		echo '<h2>'.$txt.'</h2>';	}	public static function GetUnixTimeForMonth($month,$year){		$data = '01-'.((strlen($month)==1)?'0':'').$month.'-'.$year;		$DateTime = new DateTime((string)$data);		$start_unix = $DateTime->format('U');		for($x=1;$x<=(int)$DateTime->format('t');$x++){			$unix_suma[$x] = array('od'=>(($start_unix + ($x*86400))-86400),'do'=>($start_unix + ($x*86400)));		}		return $unix_suma;	}	public function ShowPanel(){		if(isset($_POST['ajax'])){			$miesiace = array('','Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień' );			$data = '01-'.((strlen($_POST['parm2'])==1)?'0':'').$_POST['parm2'].'-'.$_POST['parm1'];			$DateTime = new DateTime((string)$data);			$_POST['ilosc_dni'] = $DateTime->format('t');			$unix_start = new DateTime((string)$data);			$unix_start=$unix_start->format('U');			$data = $_POST['ilosc_dni'].'-'.((strlen($_POST['parm2'])==1)?'0':'').$_POST['parm2'].'-'.$_POST['parm1'];			$unix_stop = new DateTime((string)$data);			$unix_stop=$unix_stop->format('U');				$sql_M="SELECT ";				foreach(self::GetUnixTimeForMonth($_POST['parm2'],$_POST['parm1']) as $miesiac => $_unxia){					$sql_Mx[]="(SELECT count(*) FROM <@>tc_stats WHERE data_add >= '{$_unxia['od']}' AND data_add <= '{$_unxia['do']}') as suma_{$miesiac} ";				}				$sql_M.=implode(',',$sql_Mx);			foreach($this->Select($sql_M)->{0} as $sa=>$_ASf){				$_OASDG[$sa] = $_ASf;							}			for($x=1;$x<=$_POST['ilosc_dni'];$x++){				$dataxx=((strlen($x)=='1')?'0':'').$x.'-'.((strlen($_POST['parm2'])=='1')?'0':'').$_POST['parm2'].'-'.$_POST['parm1'];				$html.='<tr><td style="width:150px">'.$x.' '.$miesiace[$_POST['parm2']].'</td><td><a href="javascript:OpenDescView2(\''.$dataxx.'\')">'.$_OASDG['suma_'.$x].'</a></td></tr>';			}			echo '<table class="table table-condensed table_no_padding" style="font-size:10px;padding:0px;">'.$html.'</table>';			return;		}		if(isset($_POST['ajax2'])){			$dP= new DateTime((string)$_POST['parm1']);			$start = $dP->format('U');			$stop = $start + 86400;						$tSQL = $this->Select("SELECT * FROM <@>tc_stats WHERE data_add >= '{$start}' AND data_add <= '{$stop}'");			?>			<div class="table-responsive">            <table class="table table-striped font_small table-bordered">              <thead>                <tr>                  <th>Data</th>                  <th>Adres IP</th>                  <th>URL</th>                  <th>Typ urządzenia</th>                </tr>              </thead>              <tbody>			<?php			foreach($tSQL as $_jk){				?>					                <tr>                  <td><?php echo date('d-m-Y G:i:s',$_jk->data_add);?></td>                  <td><?php echo $_jk->ip;?></td>                  <td><?php echo $_jk->url_link;?></td>                  <td><?php echo $_jk->typ_urzadzenia;?></td>                </tr>         				<?php							}			?>                 </tbody>            </table>          </div><?php			// pre($tSQL);			// echo '<pre>';			// print_r($tSQL);			// echo '</pre>';						return;					}		// pre($this->Select("SELECT * FROM <@>tc_stats LIMIT 10"));		// exit;		// $t=$this->Select("SELECT * FROM <@>tc_stats WHERE hostname=''");		// exit;		// foreach($t as $i){			// if($i->ip !== '127.0.0.1'){				// $json = json_decode(file_get_contents("http://ipinfo.io/{$i->ip}"));				// $this->Update('tc_stats',array('hostname'=>$json->hostname, 'city'=>$json->city, 'region'=>$json->region, 'loc'=>$json->loc, 'org'=>$json->org ),'id='.$i['id']);			// }		// }		$time= self::GetSecOnDay();		$sql_1 = $this->Select("SELECT * FROM <@>tc_stats WHERE `data_add` >= {$time->start_time} AND data_add <= {$time->end_time}");		$ile1=0;		foreach($sql_1 as $ui){			$ile1++;		}		$start_time=$time->start_time-(7*86400);		$sql_2 = $this->Select("SELECT * FROM <@>tc_stats WHERE `data_add` >= {$start_time} AND data_add <= {$time->end_time}");		$ile2=0;		foreach($sql_2 as $ui){			$ile2++;		}		$start_time=$time->start_time-(31*86400);		$sql_3 = $this->Select("SELECT * FROM <@>tc_stats WHERE `data_add` >= {$start_time} AND data_add <= {$time->end_time}");		$ile3=0;		foreach($sql_3 as $ui){			$ile3++;		}		$sql_4 = $this->Select("SELECT * FROM <@>tc_stats ORDER BY id DESC LIMIT 20");		// $sql_4des = $this->Select("SELECT * FROM <@>tc_stats WHERE typ_urzadzenia='computer' or typ_urzadzenia='' ORDER BY id DESC");		// $sql_4mob = $this->Select("SELECT * FROM <@>tc_stats WHERE typ_urzadzenia='phone' or  typ_urzadzenia='tablet' ORDER BY id DESC");		$ile4=0;		foreach($sql_4 as $ui){			$ile4++;		}		$ile_tabela = $this->GetCollectDatas();		$ile_tabela_des = $this->GetCollectDatas(" AND (typ_urzadzenia='computer' OR typ_urzadzenia='')");		$ile_tabela_mob = $this->GetCollectDatas(" AND (typ_urzadzenia='phone' OR typ_urzadzenia='tablet')");		/*			DANE DLA TABELKI INFORMACJE OGÓLNE		*/		$_unix = new DateTime((string)'01-01-'.date('Y'));		$_unix=$_unix->format('U');		$_unix2 = new DateTime((string)'01-'.date('m').'-'.date('Y'));		$_unix2=$_unix2->format('U');		$_unix3 = new DateTime((string)'31-'.date('m').'-'.date('Y'));		$_unix3=$_unix3->format('U');		$_unix4 = new DateTime(date('d-m-Y'));		$_unix4=$_unix4->format('U');		$_unix4a = $_unix4 + 86400;		$_unix5 = time()-3600;		$sql_informacje_ogolne = $this->Select("SELECT 			(SELECT SUM(count_unit) FROM <@>tc_stats ) as suma_wszystkich_wywolan,			(SELECT SUM(count_unit) FROM <@>tc_stats WHERE data_add >= '{$_unix}') as suma_w_tym_roku,			(SELECT SUM(count_unit) FROM <@>tc_stats WHERE data_add >= '{$_unix2}' AND data_add <= '{$_unix3}') as suma_w_tym_miesiacu,			(SELECT SUM(count_unit) FROM <@>tc_stats WHERE data_add >= '{$_unix4}' AND data_add <= '{$_unix4a}') as suma_w_tym_dniu,			(SELECT SUM(count_unit) FROM <@>tc_stats WHERE data_add >= '{$_unix5}' AND data_add <= '".time()."') as suma_ostatnia_godzina,			(SELECT COUNT(DISTINCT `ip`) FROM <@>tc_stats) AS unikalnych_hostow		")->{0};		// pre($sql_informacje_ogolne);		// if(isset($_GET['SHOW_PANEL']))			require_once(dirname(__FILE__).'/../../istats5/themes.html');			}	public function GetUnixTimeFromYear($year,$where=null){		if($where==null)			$where ='';		for($x=1;$x<=12;$x++){			$d = new DateTime("{$year}-{$x}-01 00:00:00");			$start = $d->format('U');			$dd = new DateTime("{$year}-{$x}-31 00:00:00");			$end  = $dd->format('U');			$tab[$x]=$this->Select("SELECT count(id) as ile FROM <@>tc_stats WHERE `data_add` >= {$start} AND data_add <= {$end} {$where}")->{0}->ile;		}			return $tab;	}	public function GetCollectDatas($where=null){		$start = (int)date("Y");	$start=$start-$this->config->count_back_years;		$stop = (int)date("Y");		for($x=$stop;$x>=$start;--$x){			$year[$x] =$this->GetUnixTimeFromYear($x,$where);		}				return $year;							}	public function CheckExistsTable(){		$tables = $this->query("SHOW TABLES");		foreach($tables as $t=>$i){			foreach($i as $xsf=>$sdgjs){				$tab[]=$sdgjs;							}			// $dx=$i;		}		// pre($tab);exit;			if(!in_array($this->prefix.'tc_stats',$tab)){			$this->Db->query("CREATE TABLE IF NOT EXISTS `{$this->prefix}tc_stats` (			  `id` int(20) NOT NULL AUTO_INCREMENT,			  `data_add` int(10) NOT NULL,			  `ip` varchar(20) NOT NULL,			  `hostname` varchar(150) NOT NULL,			  `city` varchar(30) NOT NULL,			  `region` varchar(50) NOT NULL,			  `loc` varchar(50) NOT NULL,			  `org` varchar(255) NOT NULL,			  `url_link` varchar(255) NOT NULL,			  `http_user_agent` varchar(255) NOT NULL,			  `typ_urzadzenia` varchar(255) NOT NULL,			  `count_unit` int(10) NOT NULL,			  PRIMARY KEY (`id`)			) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;");		}		return $this;	}}$TC_Stats = new TC_Stats($root);$TC_Stats->ShowPanel();    // $tpl->displayPage('stats.tpl');// echo time();?>